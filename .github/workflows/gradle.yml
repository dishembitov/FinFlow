name: CI For FinFlow Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [
          'core-banking-service',
          'finflow-config-server',
          'finflow-fund-transfer-service',
          'finflow-user-service',
          'finflow-utility-payment-service',
          'finflow-service-registry',
          'finflow-api-gateway'
        ]
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ matrix.dir }}

      - name: Grant execute permission for wait-for-it.sh
        run: |
          if [ -f wait-for-it.sh ]; then
            chmod +x wait-for-it.sh
          fi
        working-directory: ${{ matrix.dir }}

      - name: Build
        run: ./gradlew build -x test
        working-directory: ${{ matrix.dir }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dir }}-artifacts
          path: |
            ${{ matrix.dir }}/build/libs/*.jar
            ${{ matrix.dir }}/Dockerfile
            ${{ matrix.dir }}/wait-for-it.sh
          retention-days: 1
          overwrite: true

  docker_publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [
          'core-banking-service',
          'finflow-config-server',
          'finflow-fund-transfer-service',
          'finflow-user-service',
          'finflow-utility-payment-service',
          'finflow-service-registry',
          'finflow-api-gateway'
        ]
    permissions:
      contents: read
      packages: write
    needs: build

    steps:
      - name: Download latest build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.dir }}-artifacts
          path: downloaded-artifacts

      - name: Prepare Docker build context
        run: |
          echo "=== Downloaded structure ==="
          find downloaded-artifacts -type f -ls
          
          echo "=== Creating proper structure ==="
          mkdir -p docker-context/build/libs

          find downloaded-artifacts -name "*.jar" -exec cp {} docker-context/build/libs/ \;

          find downloaded-artifacts -name "Dockerfile" -exec cp {} docker-context/ \;
          
          find downloaded-artifacts -name "wait-for-it.sh" -exec cp {} docker-context/ \;
          
          if [ -f docker-context/wait-for-it.sh ]; then
            chmod +x docker-context/wait-for-it.sh
          fi
          
          echo "=== Final Docker context structure ==="
          ls -la docker-context/
          ls -la docker-context/build/libs/

      - name: Build Docker image
        run: docker build -t dishembitov/${{ matrix.dir }}:latest .
        working-directory: docker-context

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to DockerHub
        run: |
          docker push dishembitov/${{ matrix.dir }}:latest
          docker tag dishembitov/${{ matrix.dir }}:latest dishembitov/${{ matrix.dir }}:${{ github.run_number }}
          docker push dishembitov/${{ matrix.dir }}:${{ github.run_number }}